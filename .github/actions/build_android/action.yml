name: 'Build Tail App builds'
description: 'Internal Action for Tail App'
inputs:
  # Version info
  version:
    description: 'Release Version'
    required: true
  build-number:
    description: 'Git build number'
    required: true
  # Android signing
  android-key-properties:
    description: 'Properties file containing signing info'
    required: true
  android-key-jks: 
    description: 'Base64 version of the jks file'
    required: true
  android-keystore-password: 
    description: 'password to decrypt the jks file'
    required: true
  android-key-password: 
    description: 'password to decrypt the key'
    required: true
  # Sentry 
  sentry-dsn:
    description: 'The sentry dsn for sending error info'
    required: true
runs:
  using: "composite"
  steps:
    - name: Write Key Properties
      shell: bash
      if: github.event_name == 'push'
      run: echo "$ANDROID_KEY_PROPERTIES" > ./android/key.properties
      env:
        ANDROID_KEY_PROPERTIES: ${{ inputs.android-key-properties }}
    - name: Write Certificate
      shell: bash
      if: github.event_name == 'push'
      run: echo -n "$ANDROID_KEY_JKS" | base64 -d > ./android/tailCo.jks
      env:
        ANDROID_KEY_JKS: ${{ inputs.android-key-jks }}
    - name: Build AppBundle
      shell: bash
      run: flutter build appbundle --split-debug-info=./symbols --build-number="$BUILD_NUMBER" --build-name="$VERSION"  --dart-define=SENTRY_DSN="$SENTRY_DSN"
      env:
        VERSION: ${{ inputs.version }}
        BUILD_NUMBER: ${{ inputs.build-number }}
        SENTRY_DSN: ${{ inputs.sentry-dsn }}
    - name: Convert aab to apk
      id: convert_aab
      uses: mukeshsolanki/bundletool-action@v1.0.0
      with:
        aabFile: build/app/outputs/bundle/release/app-release.aab
        base64Keystore: ${{ inputs.android-key-jks }}
        keystorePassword: ${{ inputs.android-keystore-password }}
        keystoreAlias: tailApp
        keyPassword: ${{ inputs.android-key-password }}
        bundletoolVersion: '1.9.0'
    - name: Rename APK
      shell: bash
      run: \
        mkdir build/app/outputs/apk/release/
        mv ${{ steps.convert_aab.outputs.apkPath }} build/app/outputs/apk/release/tailCompanyApp-${{ inputs.version }}-${{ inputs.build-number }}.apk
    - uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: artifact-${{ inputs.version }}-${{ inputs.build-number }}
        path: build/app/outputs/apk/release
